name: C++ CI

on:
  pull_request:
    branches:
      - master
      - development
      - '@feat/*'

jobs:
  # We only run the full build on master and development branches
  # The building is simply too expensive to run on every feature branch PR
  full-build:
    if: github.base_ref == 'master' || github.base_ref == 'development'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake g++ clang-tidy ccache \
            libx11-dev libxext-dev libxrandr-dev libxi-dev \
            libxinerama-dev libxcursor-dev \
            libgl1-mesa-dev libfreetype6-dev \
            libpng-dev libjpeg-dev zlib1g-dev

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            ~/.ccache
            build-asan/_deps
          key: ${{ runner.os }}-deps-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Configure compiler cache
        run: echo 'export PATH="/usr/lib/ccache:$PATH"' >> $GITHUB_ENV

      - name: Run clang-tidy
        continue-on-error: true
        run: |
          cmake -S . -B build-tidy -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          clang-tidy -p build-tidy $(find src include tests -name '*.cpp') --warnings-as-errors=*

      - name: Configure (ASan)
        run: |
          cmake -S . -B build-asan \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_FLAGS="-fsanitize=address -g -O1" \
            -DENABLE_TESTS=ON \
            -DENABLE_TRACY=OFF \
            -DBUILD_SHARED_LIBS=OFF

      - name: Build (ASan)
        run: cmake --build build-asan --parallel --target all

      - name: Run tests (ASan)
        run: |
          export ASAN_OPTIONS=detect_leaks=1
          ctest --test-dir build-asan --output-on-failure

  # Lightweight tests for feat branches
  light-test:
    if: startsWith(github.head_ref, '@feat/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libgtest-dev

      - name: Configure (fast build)
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DENABLE_TESTS=ON \
            -DBUILD_SHARED_LIBS=OFF

      - name: Build tests
        run: cmake --build build-asan --parallel --target all || echo "Skill issue ðŸ¤¡"

      - name: Run tests
        run: ctest --test-dir build --output-on-failure
